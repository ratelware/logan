CMAKE_MINIMUM_REQUIRED(VERSION 3.8)
PROJECT (MasterProject)

SET(ROOT_DIR ${CMAKE_SOURCE_DIR})
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

INCLUDE(${ROOT_DIR}/buildsystem/CMake/configuration.cmake)
INCLUDE(${ROOT_DIR}/buildsystem/CMake/compiler_support.cmake)
INCLUDE(${ROOT_DIR}/buildsystem/CMake/library_support.cmake)
INCLUDE(${ROOT_DIR}/buildsystem/CMake/utilities.cmake)

SET(CMAKE_BINARY_DIR ${CMAKE_SOURCE_DIR}/bin)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY  ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/exe)

MESSAGE(STATUS "Using library output directory: ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
MESSAGE(STATUS "Using runtime output directory: ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")

SET_WARNING_LEVEL()
DISABLE_COMPILER_EXTENSIONS()
ENABLE_MULTIPROCESSOR_BUILD()
ADD_SANITIZERS_TO_BUILD()
SET_PROPER_STANDARD_LIBRARY()
SET_PROPER_STANDARD_VERSION("c++1y")
ADD_DEFINITIONS(-DUSE_BOOST_PROGRAM_OPTIONS=${USE_BOOST_PROGRAM_OPTIONS})
ADD_DEFINITIONS(-DUSE_LYRA_PROGRAM_OPTIONS=${USE_LYRA_PROGRAM_OPTIONS})

MESSAGE(STATUS "Using C++ compiler: ${CMAKE_CXX_COMPILER_ID} ${CMAKE_CXX_COMPILER_VERSION}")

IF(${USE_QT})
    SET(EXTERNAL_LIBRARIES Qt::Widgets Qt::Xml Qt::Core ${LIBXML2_LIBRARIES})
ENDIF(${USE_QT})
#External dependencies
IF(${USE_MULTITHREADING})
    FIND_PACKAGE(Threads REQUIRED)
    SET(EXTERNAL_LIBRARIES "${EXTERNAL_LIBRARIES};${CMAKE_THREAD_LIBS_INIT}")
	ENABLE_MULTITHREADING()
ENDIF(${USE_MULTITHREADING})
	
IF(${USE_BOOST})
    ADD_DEPENDENCY_TO_BOOST(${Boost_VERSION} ${Boost_REQUIRED_LIBRARIES})
    SET(EXTERNAL_LIBRARIES "${Boost_LIBRARIES};${EXTERNAL_LIBRARIES}")
ENDIF(${USE_BOOST})

IF(${USE_OPENCV})
    ADD_DEPENDENCY_TO_OPEN_CV()
    SET(EXTERNAL_LIBRARIES "${OpenCV_LIBS};${EXTERNAL_LIBRARIES}")
ENDIF(${USE_OPENCV})


ADD_SUBDIRECTORY(production)
SET(TARGETS ${INTERNAL_LIBRARIES} ${SEMI_INTERNAL_LIBRARIES})

IF (${PRODUCTION_INCLUDE_DIR} STREQUAL "")
    MESSAGE(FATAL_ERROR "PRODUCTION_INCLUDE_DIR shall be set by cmake files in production code")
ENDIF(${PRODUCTION_INCLUDE_DIR} STREQUAL "")

INCLUDE_DIRECTORIES(${PRODUCTION_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${LIBRARY_INCLUDE_DIRS})

IF(${WITH_TESTCASES} OR ${WITH_BENCHMARKS})
    ADD_SUBDIRECTORY(tests)
	
	IF(${WITH_TESTCASES})
        SET(TARGETS ${TARGETS} ${TESTCASES_PROJECT})
	ENDIF(${WITH_TESTCASES})
	
	IF(${WITH_BENCHMARKS})
        SET(TARGETS ${TARGETS} ${BENCHMARK_PROJECT})
	ENDIF(${WITH_BENCHMARKS})
ENDIF(${WITH_TESTCASES} OR ${WITH_BENCHMARKS})

IF(${WITH_EXECUTABLE})
    ADD_SUBDIRECTORY(executable)
    ADD_DEPENDENCIES(${EXECUTABLE_PROJECT} ${INTERNAL_LIBRARIES} ${SEMI_INTERNAL_LIBRARIES})
	SET(TARGETS ${TARGETS} ${EXECUTABLE_PROJECT})
ENDIF(${WITH_EXECUTABLE})

SET_OUTPUT_DIRECTORIES(${TARGETS})
